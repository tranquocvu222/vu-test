
server {
  #server_name api.rmt-auction.dev.nals.vn;
  error_log  /var/log/nginx/api_dev_error.log;
  access_log /var/log/nginx/api_dev_access.log;
  client_max_body_size 10M;

  location / {
    add_header       Access-Control-Allow-Origin '*' always;
    add_header       Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, PATCH, DELETE' always;
    add_header       Access-Control-Allow-Headers 'X-Provider-Id,X-Uuid,LMAC-Authorization,Content-Type' always;
    add_header       Access-Control-Allow-Credentials 'true';

    if ($request_method = OPTIONS ) {
      add_header       Access-Control-Allow-Origin '*';
      add_header       Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
      add_header       Access-Control-Allow-Headers 'X-Provider-Id,X-Uuid,LMAC-Authorization,Content-Type';
      add_header       Access-Control-Allow-Credentials 'true';
      add_header       Access-Control-Max-Age 1728000;
      add_header       Content-Length 0;
      add_header       Content-Type text/plain;
      return           200;
    }

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Will add the user's ip to the request, some apps need this
    proxy_set_header X-Forwarded-Proto $scheme; # will forward the protocole i.e. http, https
    proxy_set_header X-Forwarded-Port $server_port; # Will forward the port#   proxy_pass http://127.0.0.1:8080;
    #auth_basic "Restricted";
    #auth_basic_user_file /etc/nginx/.htpasswd;
    proxy_pass http://rmt_auction_api:8080;
  }

  #listen 443 ssl; # managed by Certbot
  #ssl_certificate /etc/letsencrypt/live/api.rmt-auction.dev.nals.vn/fullchain.pem; # managed by Certbot
  #ssl_certificate_key /etc/letsencrypt/live/api.rmt-auction.dev.nals.vn/privkey.pem; # managed by Certbot
  #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
  if ($host = api.rmt-auction.dev.nals.vn) {
    return 301 https://$host$request_uri;
  } # managed by Certbot

  listen 80;
  #server_name api.rmt-auction.dev.nals.vn;
  return 404; # managed by Certbot
}
